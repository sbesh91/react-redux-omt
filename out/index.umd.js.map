{"version":3,"file":"index.umd.js","sources":["../src/main-thread-functions.ts","../src/worker-functions.ts"],"sourcesContent":["import { Signal, useSignal, useSignalEffect } from \"@preact/signals-react\";\nimport { Action } from \"redux\";\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\nimport {\n  FunctionParameters,\n  SelectorFunction,\n  SelectorReturn,\n  WorkerSelector,\n} from \"./types\";\n\nlet worker: Worker | undefined;\nconst workerEvent = new Signal<SelectorReturn<unknown> | null>(null);\n\nfunction initializeWorkerStoreListener(w: Worker) {\n  worker = w;\n\n  w.addEventListener(\n    \"message\",\n    ({ data }: MessageEvent<SelectorReturn<unknown>>) => {\n      workerEvent.value = data;\n    }\n  );\n}\n\nfunction dispatch(action: Action) {\n  worker?.postMessage({ type: \"dispatch\", action });\n}\n\nfunction useWorkerSelector<\n  Fn extends SelectorFunction<Parameters<Fn>[0], ReturnType<Fn>>,\n  Params extends FunctionParameters<Fn>,\n  Return extends ReturnType<Fn>,\n  RequiredParams extends [Params[0]] extends [undefined]\n    ? {}\n    : { params: Params },\n  Options extends { defaultValue?: Return } & RequiredParams\n>(selector: WorkerSelector<Fn>, options: Options): Signal<Return>;\n\nfunction useWorkerSelector<\n  Fn extends SelectorFunction<Parameters<Fn>[0], ReturnType<Fn>>,\n  Params extends FunctionParameters<Fn>,\n  Return extends ReturnType<Fn>,\n  RequiredParams extends [Params[0]] extends [undefined]\n    ? {}\n    : { params: Params },\n  Options extends { defaultValue?: Return } & RequiredParams\n>(selector: WorkerSelector<Fn>, options?: Options): Signal<Return | undefined>;\n\nfunction useWorkerSelector<\n  Fn extends SelectorFunction<Parameters<Fn>[0], ReturnType<Fn>>,\n  Return extends ReturnType<Fn>,\n  Params extends FunctionParameters<Fn>,\n  RequiredParams extends [Params[0]] extends [undefined]\n    ? {}\n    : { params: Params },\n  Options extends { defaultValue?: Return } & RequiredParams\n>(selector: WorkerSelector<Fn>, options?: Options): Signal<Return | undefined> {\n  const defaultValue = options?.defaultValue;\n  const params = options && \"params\" in options ? options.params : [];\n  const currentUuid = useSignal(\"\");\n  const state = useSignal(defaultValue);\n\n  useSignalEffect(() => {\n    const data = workerEvent.value;\n    if (data && data.uuid === currentUuid.peek()) {\n      state.value = data.value as Return;\n    }\n  });\n\n  useDeepCompareEffect(() => {\n    const uuid = crypto.randomUUID();\n    currentUuid.value = uuid;\n\n    worker?.postMessage({\n      type: \"subscribe\",\n      uuid,\n      selector: { selector: selector.name, params },\n    });\n\n    return () => {\n      worker?.postMessage({ type: \"unsubscribe\", uuid });\n    };\n  }, [selector, params]);\n\n  return state;\n}\n\nexport {\n  workerEvent,\n  useWorkerSelector,\n  initializeWorkerStoreListener,\n  dispatch,\n};\n","import { ToolkitStore } from \"@reduxjs/toolkit/dist/configureStore\";\nimport {\n  SelectorReference,\n  MessageType,\n  SelectorFunction,\n  WorkerSelector,\n} from \"./types\";\n\nconst listeners = new Map<string, SelectorReference>();\n\nfunction initializeWorkerStore<T>(\n  store: ToolkitStore<T>,\n  selectors: Record<string, WorkerSelector<SelectorFunction<T>>>\n) {\n  addEventListener(\"message\", ({ data }: MessageEvent<MessageType>) => {\n    switch (data.type) {\n      case \"dispatch\":\n        store.dispatch(data.action);\n        break;\n      case \"subscribe\":\n        listeners.set(data.uuid, data.selector);\n        runSelector(data.selector, data.uuid);\n        break;\n      case \"unsubscribe\":\n        listeners.delete(data.uuid);\n        break;\n    }\n  });\n\n  store.subscribe(() => {\n    listeners.forEach(runSelector);\n  });\n\n  function runSelector(value: SelectorReference, key: string) {\n    const selector: SelectorFunction<T> | undefined =\n      selectors?.[value.selector]?.fn;\n    const params = value.params;\n\n    if (selector) {\n      const returnValue = selector(store.getState(), ...params);\n\n      postMessage({\n        uuid: key,\n        value: returnValue,\n      });\n    }\n  }\n}\n\nfunction createWorkerSelector<T extends SelectorFunction<Parameters<T>[0]>>(\n  name: string,\n  selector: T\n): WorkerSelector<T> {\n  return {\n    name,\n    fn: selector,\n  };\n}\n\nexport { initializeWorkerStore, createWorkerSelector };\n"],"names":["worker","workerEvent","Signal","name","selector","fn","action","_worker","postMessage","type","store","selectors","runSelector","value","key","_selectors$value$sele","params","returnValue","apply","getState","concat","uuid","addEventListener","_ref","data","dispatch","listeners","set","subscribe","forEach","w","options","defaultValue","currentUuid","useSignal","state","useSignalEffect","peek","useDeepCompareEffect","_worker2","crypto","randomUUID","_worker3"],"mappings":"mdAUIA,sBACaC,EAAG,IAAIC,EAAMA,OAAiC,QCH7C,+BAyClB,SACEC,EACAC,GAEA,MAAO,CACLD,KAAAA,EACAE,GAAID,EAER,aDjCA,SAAkBE,GAAc,IAAAC,EACxB,SAANP,IAAAO,EAAQC,YAAY,CAAEC,KAAM,WAAYH,OAAAA,GAC1C,0BChBA,SACEI,EACAC,GAqBA,SAAoBC,EAACC,EAA0BC,GAC7C,IAAAC,UACEJ,GAAA,SAAAA,EAAYE,EAAMT,kBAAlBW,EAA6BV,KAChBQ,EAAMG,OAErB,GAAIZ,EAAU,CACZ,IAAMa,EAAcb,EAAQc,WAAA,EAAA,CAACR,EAAMS,YAAUC,OAAKJ,IAElDR,YAAY,CACVa,KAAMP,EACND,MAAOI,GAEV,CACH,CAhCAK,iBAAiB,UAAW,SAAAC,OAAOC,EAAAD,EAAJC,KAC7B,OAAQA,EAAKf,MACX,IAAK,WACHC,EAAMe,SAASD,EAAKlB,QACpB,MACF,IAAK,YACHoB,EAAUC,IAAIH,EAAKH,KAAMG,EAAKpB,UAC9BQ,EAAYY,EAAKpB,SAAUoB,EAAKH,MAChC,MACF,IAAK,cACHK,EAAS,OAAQF,EAAKH,MAG5B,GAEAX,EAAMkB,UAAU,WACdF,EAAUG,QAAQjB,EACpB,EAgBF,kCDlCA,SAAuCkB,GACrC9B,EAAS8B,EAETA,EAAER,iBACA,UACA,SAAoDC,GAClDtB,EAAYY,MADPU,EAAJC,IAEH,EAEJ,sBA0BA,SAQEpB,EAA8B2B,GAC9B,IAAMC,EAAeD,MAAAA,OAAAA,EAAAA,EAASC,aAClBhB,EAAGe,GAAW,WAAmBA,EAAGA,EAAQf,OAAS,GAC3DiB,EAAcC,EAAAA,UAAU,IACxBC,EAAQD,EAAAA,UAAUF,GAwBxB,OAtBAI,EAAAA,gBAAgB,WACd,IAAUZ,EAAGvB,EAAYY,MACrBW,GAAQA,EAAKH,OAASY,EAAYI,SACpCF,EAAMtB,MAAQW,EAAKX,MAEvB,GAEAyB,EAAoB,QAAC,WAAK,IAAAC,EAClBlB,EAAOmB,OAAOC,aASpB,OARAR,EAAYpB,MAAQQ,EAEpB,OAAArB,EAAAA,IAAAuC,EAAQ/B,YAAY,CAClBC,KAAM,YACNY,KAAAA,EACAjB,SAAU,CAAEA,SAAUA,EAASD,KAAMa,OAAAA,KAG3B,WAAA,IAAA0B,EACV,OAAA1C,EAAAA,IAAA0C,EAAQlC,YAAY,CAAEC,KAAM,cAAeY,KAAAA,GAC7C,CACF,EAAG,CAACjB,EAAUY,IAEPmB,CACT"}