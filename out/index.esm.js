import{Signal as e,useSignal as a,useSignalEffect as t}from"@preact/signals-react";import n from"use-deep-compare-effect";var u,s,r=new e(null);function c(e){u=e,e.addEventListener("message",function(e){r.value=e.data})}function i(e){var a;null==(a=u)||a.postMessage({type:"dispatch",action:e})}function o(e,s,c){var i=a(""),o=a(c);return t(function(){var e=r.value;e&&e.uuid===i.peek()&&(o.value=e.value)}),n(function(){var a,t=crypto.randomUUID();return i.value=t,null==(a=u)||a.postMessage({type:"subscribe",uuid:t,selector:{selector:e.name,params:s}}),function(){var e;null==(e=u)||e.postMessage({type:"unsubscribe",uuid:t})}},[e,s]),o}var l=new Map;function p(e,a){function t(a,t){var n,u,r,c=null==(n=s)||null==(u=n[a.selector])?void 0:u.fn,i=null!=(r=a.params)?r:[];if(c){var o=c.apply(void 0,[e.getState()].concat(i));postMessage({uuid:t,value:o})}}s=a,addEventListener("message",function(a){var n=a.data;switch(n.type){case"dispatch":e.dispatch(n.action);break;case"subscribe":l.set(n.uuid,n.selector),t(n.selector,n.uuid);break;case"unsubscribe":l.delete(n.uuid)}}),e.subscribe(function(){l.forEach(t)})}function d(e,a){return{name:e,fn:a}}export{d as createWorkerSelector,i as dispatch,p as initializeWorkerStore,c as initializeWorkerStoreListener,o as useWorkerSelector};
//# sourceMappingURL=index.esm.js.map
